buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        flatDir {
            dirs 'dfshield/libs'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.5.0'
        classpath 'com.github.kezong:fat-aar:1.3.8'
    }
}

plugins {
    id 'org.jreleaser' version '1.17.0'
    id 'base'
}

allprojects {
    repositories {
        flatDir {
            dirs 'libs'
        }
        mavenLocal()
        google()
        mavenCentral()
    }
}

// 读取环境变量或命令行参数
def ossrhUsername = project.hasProperty("ossrhUsername") ? project.property("ossrhUsername") : System.getenv("OSSRH_USERNAME")
def ossrhPassword = project.hasProperty("ossrhPassword") ? project.property("ossrhPassword") : System.getenv("OSSRH_PASSWORD")
//def gpgPublicKey = project.findProperty("gpgPublicKey")
//def gpgSecretKey = project.findProperty("gpgSecretKey")
//def gpgPassphrase = project.findProperty("gpgPassphrase")
def stagingDir = file("${projectDir}/library/build/staging-deploy")
if (!stagingDir.exists()) {
    stagingDir.mkdirs()
}
jreleaser {
    project {
        name = 'DataForestShield'
        version = '1.0.0'
        description = 'DataForestShield project'
        authors = ['jiangyuan']
        license = 'Apache-2.0'
        java {
            groupId = 'com.xksztech'
            artifactId = 'shieldsdk'
        }
    }

    signing {
        active = 'ALWAYS'
        armored = true
//        publicKey = gpgPublicKey
//        secretKey = gpgSecretKey
//        passphrase = gpgPassphrase
    }

    deploy {
        maven {
            nexus2 {
                'maven-central' {
                    active = 'ALWAYS'
                    url = 'https://s01.oss.sonatype.org/service/local'
                    snapshotUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                    closeRepository = true
                    releaseRepository = true
                    username = ossrhUsername
                    password = ossrhPassword
                    stagingRepository(stagingDir.absolutePath)
//                    stagingDirectories = [
//                            file("$buildDir/outputs/aar")
//                    ]
//                    stagingDirectories = ["${buildDir}/outputs/aar"]
//                    stagingDirectories = [
//                            project.layout.buildDirectory.dir("outputs/aar").get().asFile
//                    ]
                }
            }
        }
    }

    distributions {
        dfshield {
            distributionType = 'BINARY'
            artifact {
                path = "$buildDir/outputs/aar/DataForestShield_v1.0.aar"
                platform = 'java'
            }
        }
    }
}

